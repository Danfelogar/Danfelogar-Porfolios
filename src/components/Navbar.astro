---
import { styles } from "@/styles/styles"
import { navLinks } from "@/utils/constants/index"
import { $settings } from "@/store/store"
import { getLangFromUrl, getLocalizedPathname, useTranslations } from "@/i18n/utils";

const { pathname } = Astro.url;


const lang = getLangFromUrl(Astro.url);
const hrefES = getLocalizedPathname(pathname, "es");
const hrefEN = getLocalizedPathname(pathname, "en");

const t = useTranslations(lang);

const active = $settings.get().activeNavLink
const isOpenModal = $settings.get().showNavModal
---

<div class={`${styles.paddingX} w-full flex items-center py-5 fixed top-0 z-20 bg-primary-2`}>
    <div class="w-full flex justify-between items-center max-w-7xl mx-auto">
        <a class="flex items-center gap-2" id="logo-link">
            <img src="../../public/imgs/simple_logo.png" alt="logo" class="w-9 h-9 object-contain rounded-full cursor-pointer">
            <p class="text-white text-[18px] font-bold cursor-pointer flex">Danfelogar<span class="sm:block hidden ml-1">| JavaScript Dev</span></p>
        </a>

        <ul class='list-none hidden sm:flex flex-row gap-10'>
          {navLinks.map((nav) => (
            <li
            id="nav-link"
              class={`${
                active === t(nav.title) ? "text-white" : "text-secondary"
              } hover:text-white text-[18px] font-medium cursor-pointer`}
              data-message={t(nav.title)}
            >
              <a href={`#${nav.id}`}>{t(nav.title)}</a>
            </li>
          ))}
        </ul>

        <img
        src={isOpenModal ? "../../public/icons/close.svg" : "../../public/icons/menu.svg"}
        alt='menu'
        id="icon-hamburger"
        class='w-[28px] h-[28px] object-contain sm:hidden flex cursor-pointer'
      />

      <div
      id="conetent-nav-mobile"
        class={`hidden p-6 black-gradient absolute top-20 right-0 mx-4 my-2 min-w-[140px] z-10 rounded-xl`}>
        <ul class='list-none flex justify-end items-start flex-1 flex-col gap-4'>
          {navLinks.map((nav) => (
            <li
              class={`font-poppins font-medium cursor-pointer text-[16px] ${
                active === t(nav.title) ? "text-white" : "text-secondary"
              }`}
              id="nav-link-mobile"
              data-message={t(nav.title)}
            >
              <a href={`#${nav.id}`}>{t(nav.title)}</a>
            </li>
          ))}
        </ul>
      </div>
    </div>
</div>

<script>

    import { $settings, changeActiveNavLink, changeStateOfShowNavModal } from "@/store/store"


    const logoLink = document.getElementById('logo-link');
    const iconHamburger = document.getElementById('icon-hamburger');
    const navLink = document.getElementById('nav-link');
    const navLinkMobile = document.getElementById('nav-link-mobile');
    const contentNavMobile = document.getElementById('conetent-nav-mobile');

    if (logoLink) {
        logoLink.addEventListener('click', () => {
            window.scrollTo(0, 0);
        });
    }

    if (navLink) {
      const message = document.querySelector('li')
        navLink.addEventListener('click', () => {
          changeActiveNavLink(message?.dataset.message!);
        });
    }

    if (iconHamburger) {
        iconHamburger.addEventListener('click', () => {
          changeStateOfShowNavModal();
        });
    }

    if(navLinkMobile) {
      const message = document.querySelector('li')
      navLinkMobile.addEventListener('click', () => {
        changeActiveNavLink(message?.dataset.message!);
        changeStateOfShowNavModal();
      });
    }

    $settings.subscribe((value) => {
      if(value.showNavModal) {
      iconHamburger?.setAttribute("src", "../../public/icons/close.svg")
      contentNavMobile?.classList.remove('hidden')
      contentNavMobile?.classList.add('flex')
    } else if(!value.showNavModal) {
      iconHamburger?.setAttribute("src", "../../public/icons/menu.svg")
      contentNavMobile?.classList.remove('flex')
      contentNavMobile?.classList.add('hidden')
    }
    });

</script>